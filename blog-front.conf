upstream backend {
    server unix:/run/nginx-blog-backend.sock;
}

proxy_cache_path /var/cache/nginx/bloghtml levels=1:2 keys_zone=bloghtml:4m max_size=50m inactive=120m;
proxy_set_header X-Forwarded-Proto https;

server {
    server_name  blog.koyama.me;
    root         /var/www/blog.koyama.me;

    access_log /var/log/nginx/access.blog.log;
    error_log  /var/log/nginx/error.blog.log error;
    index index.html index.htm index.php;

    client_max_body_size 20M;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt { access_log off; log_not_found off; }
    location = /apple-touch-icon.png { access_log off; log_not_found off; }
    location = /apple-touch-icon-precomposed.png { access_log off; log_not_found off; }
    location ~ /\. { deny all; access_log off; log_not_found off; }

    location ~* /wp-(content|admin|includes) {
        if ($request_filename ~* .*\.(xml|gz)) {
            break;
            expires 1d;
        }
        if ($request_filename ~* .*\.(txt|html?|js|css|swf)) {
            break;
            expires 30d;
        }
        if ($request_filename ~* .*\.(ico|jpe?g|gif|png|wmv|flv|mpg|gz)) {
            break;
            expires 365d;
        }
	if ($request_filename ~ .*\.php) {
            break;
            proxy_pass http://backend;
        }
    }

    location ~ \.php$ {
	proxy_pass http://backend;
    }

    location / {
	set $do_not_cache 0;
        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
            set $do_not_cache 1;
        }
	if ($request_method = POST) {
            set $do_not_cache 1;
        }
	
	proxy_pass http://backend;

	proxy_cache bloghtml;
	proxy_cache_key "$request_method/$scheme://$host$request_uri";
	proxy_cache_valid 200 5m;
	proxy_cache_valid 404 1m;
	proxy_no_cache $do_not_cache;
        proxy_cache_bypass $do_not_cache;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/blog.koyama.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/blog.koyama.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


server {
    if ($host = blog.koyama.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen       80;
    server_name  blog.koyama.me;
    return 404; # managed by Certbot
}
